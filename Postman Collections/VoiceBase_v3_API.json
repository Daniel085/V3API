{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "VoiceBase v3 API",
    "description": "The v3 documentation has been designed to allow you to follow-along in your preferred language by copying code examples on the right into your terminal (cURL) or your project code. We have also included a Postman collection you can execute from the Postman application or Chrome plugin directly. Some users find using the Postman collection an easy way to experiment with the API and modify the configuration values to suit their needs, but it is not required.\n\nThis documentation uses several default values for configuration and media which you may either modify in your code, or within Postman. These environemnt variables are: \n* bearer-token: 'YOUR-BEARER-TOKEN' should be replaced with your unique token.\n* configuration: may be modified after you copy the code example and paste it in your project, or within the postman environment. \n\n\n# VoiceBase API Development with Postman\n\nThe \"Run in Postman\" button will download the entire collection of API endpoints to the Postman plugin or application on your computer and allow you to modify requests for experimentation\n\n## Configuring your environment\nThe VoiceBase v3 Postman collection makes use of environment variables to customize the requests being sent. More information on managing Postman environments can be found at [Setting up an environment with variables](https://www.getpostman.com/docs/postman/environments_and_globals/manage_environments). \nBe sure to modify your environment with the correct values for 'bearer-token' and configuration.",
    "license": {
      "name": "MIT",
      "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
    }
  },
  "host": "apis.voicebase.com",
  "basePath": "/v3",
  "securityDefinitions": {
    "auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://apis.voicebase.com/v3",
      "scopes": {}
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/media": {
      "get": {
        "description": "Retrieve a list of media previously uploaded that match a criteria",
        "summary": "/media&query={{query}}",
        "tags": [
          "/media collection"
        ],
        "operationId": "/media&query={{query}}",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "externalId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "before",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "after",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "extendedFilter",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "onOrAfterDate",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "onOrBeforeDate",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/media?query={{query}}&externalId={{externalId}}&before={{before}}&after={{after}}&extendedFilter={{extendedFilter}}&onOrAfterDate={{onOrAfterDate}}&onOrBeforeDate={{onOrBeforeDate}}&sortOrder={{sortOrder}}&limit={{limit}}",
              "headers": {
                "Authorization": "Bearer {{bearer-token}}"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "/media&query={{query}}",
            "x-testDescription": "Retrieve a list of media previously uploaded that match a criteria"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "# Using local media\nTo upload a recording for transcription and analysis, attach the named media in the body of the request in the form field: media\n\n# Using a remote media URL\nVoiceBase can also fetch media from a remote URL using the mediaURL form field in the request body.",
        "summary": "/media - Upload a media file for transcription",
        "tags": [
          "/media collection"
        ],
        "operationId": "/media - Upload a media file for transcription",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "mediaUrl",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "(optional) used to specify a remote media URL 'http://my-server.com/my-media.mp3'"
          },
          {
            "name": "configuration",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "(Required) JSON object or file specifying the configuration VoiceBase should use when processing your media file."
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/~1media  upload a media file for transcriptionresponse"
            },
            "examples": {
              "application/json": {
                "_links": {
                  "self": {
                    "href": "/v3/media/cfdeb667-2e7c-4d69-b5d5-dccd84d0f499"
                  },
                  "progress": {
                    "href": "/v3/media/cfdeb667-2e7c-4d69-b5d5-dccd84d0f499/progress"
                  },
                  "metadata": {
                    "href": "/v3/media/cfdeb667-2e7c-4d69-b5d5-dccd84d0f499/metadata"
                  }
                },
                "formatVersion": "3.0.1",
                "mediaId": "cfdeb667-2e7c-4d69-b5d5-dccd84d0f499",
                "status": "accepted",
                "dateCreated": "2017-10-13T22:35:48.346Z",
                "metadata": {},
                "mediaContentType": "audio/x-wav",
                "length": 10460
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/media",
              "headers": {
                "Content-Type": "application/x-www-form-urlencoded",
                "Authorization": "Bearer {{bearer-token}}"
              },
              "body": "mediaUrl={{mediaUrl}}&configuration={{configuration}}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Access-Control-Allow-Credentials": "true",
                "Access-Control-Allow-Headers": "accept, authorization, content-type",
                "Access-Control-Allow-Methods": "DELETE, GET, HEAD, OPTIONS, POST, PUT",
                "Access-Control-Allow-Origin": "*",
                "Content-Type": "application/json;charset=UTF-8",
                "Date": "Fri, 13 Oct 2017 22:35:47 GMT",
                "Server": "Apache",
                "Set-Cookie": "SERVERID=; Expires=Thu, 01-Jan-1970 00:00:01 GMT; path=/; Secure",
                "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
                "Transfer-Encoding": "chunked",
                "X-Application-Context": "application",
                "X-Frame-Options": "SAMEORIGIN",
                "X-Trace-ID": "9D82C4D6%3A970E_0A40E1F1%3A01BB_59E13FC3_FC5AC%3A1DE6"
              },
              "body": "{\"_links\":{\"self\":{\"href\":\"/v3/media/cfdeb667-2e7c-4d69-b5d5-dccd84d0f499\"},\"progress\":{\"href\":\"/v3/media/cfdeb667-2e7c-4d69-b5d5-dccd84d0f499/progress\"},\"metadata\":{\"href\":\"/v3/media/cfdeb667-2e7c-4d69-b5d5-dccd84d0f499/metadata\"}},\"formatVersion\":\"3.0.1\",\"mediaId\":\"cfdeb667-2e7c-4d69-b5d5-dccd84d0f499\",\"status\":\"accepted\",\"dateCreated\":\"2017-10-13T22:35:48.346Z\",\"metadata\":{},\"mediaContentType\":\"audio/x-wav\",\"length\":10460}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "/media - Upload a media file for transcription",
            "x-testDescription": "# Using local media\nTo upload a recording for transcription and analysis, attach the named media in the body of the request in the form field: media\n\n# Using a remote media URL\nVoiceBase can also fetch media from a remote URL using the mediaURL form field in the request body."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/media/{mediaId}": {
      "get": {
        "description": "Retrieve analytical results from a previously uploaded media",
        "summary": "/media/{{mediaId}}",
        "tags": [
          "/media item"
        ],
        "operationId": "/media/{{mediaId}}",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "includeAlternateFormat",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "mediaId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/~1media~1{{mediaid}}response"
            },
            "examples": {
              "application/json": {
                "_links": {
                  "self": {
                    "href": "/v3/media/00251dbe-c769-4a9f-bb87-b3aeb0745179"
                  },
                  "progress": {
                    "href": "/v3/media/00251dbe-c769-4a9f-bb87-b3aeb0745179/progress"
                  },
                  "metadata": {
                    "href": "/v3/media/00251dbe-c769-4a9f-bb87-b3aeb0745179/metadata"
                  },
                  "transcript": {
                    "href": "/v3/media/00251dbe-c769-4a9f-bb87-b3aeb0745179/transcript"
                  },
                  "text": {
                    "href": "/v3/media/00251dbe-c769-4a9f-bb87-b3aeb0745179/transcript/text"
                  },
                  "srt": {
                    "href": "/v3/media/00251dbe-c769-4a9f-bb87-b3aeb0745179/transcript/srt"
                  },
                  "dfxp": {
                    "href": "/v3/media/00251dbe-c769-4a9f-bb87-b3aeb0745179/transcript/dfxp"
                  },
                  "webvtt": {
                    "href": "/v3/media/00251dbe-c769-4a9f-bb87-b3aeb0745179/transcript/webvtt"
                  },
                  "streams": {
                    "href": "/v3/media/00251dbe-c769-4a9f-bb87-b3aeb0745179/streams"
                  }
                },
                "formatVersion": "3.0.1",
                "mediaId": "00251dbe-c769-4a9f-bb87-b3aeb0745179",
                "status": "finished",
                "dateCreated": "2017-10-12T22:16:13.98Z",
                "metadata": {},
                "mediaContentType": "audio/x-aiff",
                "length": 14965,
                "transcript": {
                  "confidence": 0.13038286891052212,
                  "words": [
                    {
                      "p": 0,
                      "c": 0.972,
                      "s": 620,
                      "e": 750,
                      "w": "To"
                    },
                    {
                      "p": 1,
                      "c": 0.964,
                      "s": 760,
                      "e": 1020,
                      "w": "find"
                    },
                    {
                      "p": 2,
                      "c": 0.901,
                      "s": 1030,
                      "e": 1080,
                      "w": "the"
                    },
                    {
                      "p": 3,
                      "c": 0.692,
                      "s": 1090,
                      "e": 1390,
                      "w": "source"
                    },
                    {
                      "p": 4,
                      "c": 0.962,
                      "s": 1400,
                      "e": 1470,
                      "w": "of"
                    },
                    {
                      "p": 5,
                      "c": 0.882,
                      "s": 1480,
                      "e": 2000,
                      "w": "success"
                    },
                    {
                      "p": 6,
                      "c": 0.974,
                      "s": 2010,
                      "e": 2150,
                      "w": "we"
                    },
                    {
                      "p": 7,
                      "c": 0.972,
                      "s": 2159,
                      "e": 2469,
                      "w": "started"
                    },
                    {
                      "p": 8,
                      "c": 0.303,
                      "s": 2479,
                      "e": 2600,
                      "w": "that"
                    },
                    {
                      "p": 9,
                      "c": 0.885,
                      "s": 2610,
                      "e": 2969,
                      "w": "work"
                    },
                    {
                      "p": 10,
                      "c": 0.27,
                      "s": 3180,
                      "e": 3310,
                      "w": "we"
                    },
                    {
                      "p": 11,
                      "c": 0.896,
                      "s": 3320,
                      "e": 3539,
                      "w": "asked"
                    },
                    {
                      "p": 12,
                      "c": 0.9,
                      "s": 3550,
                      "e": 3820,
                      "w": "people"
                    },
                    {
                      "p": 13,
                      "c": 0.951,
                      "s": 3830,
                      "e": 3969,
                      "w": "to"
                    },
                    {
                      "p": 14,
                      "c": 0.773,
                      "s": 3979,
                      "e": 4520,
                      "w": "identify"
                    },
                    {
                      "p": 15,
                      "c": 0.955,
                      "s": 4530,
                      "e": 4670,
                      "w": "who"
                    },
                    {
                      "p": 16,
                      "c": 0.929,
                      "s": 4679,
                      "e": 4790,
                      "w": "they"
                    },
                    {
                      "p": 17,
                      "c": 0.863,
                      "s": 4800,
                      "e": 5110,
                      "w": "thought"
                    },
                    {
                      "p": 18,
                      "c": 0.954,
                      "s": 5119,
                      "e": 5220,
                      "w": "were"
                    },
                    {
                      "p": 19,
                      "c": 0.737,
                      "s": 5230,
                      "e": 5300,
                      "w": "the"
                    },
                    {
                      "p": 20,
                      "c": 0.869,
                      "s": 5310,
                      "e": 5570,
                      "w": "most"
                    },
                    {
                      "p": 21,
                      "c": 0.701,
                      "s": 5580,
                      "e": 6020,
                      "w": "effective"
                    },
                    {
                      "p": 22,
                      "c": 0.976,
                      "s": 6030,
                      "e": 6560,
                      "w": "colleagues"
                    },
                    {
                      "p": 23,
                      "c": 0.941,
                      "s": 6570,
                      "e": 6679,
                      "w": "in"
                    },
                    {
                      "p": 24,
                      "c": 0.937,
                      "s": 6690,
                      "e": 7159,
                      "w": "fact"
                    },
                    {
                      "p": 25,
                      "c": 0.313,
                      "s": 7750,
                      "e": 7940,
                      "w": "over"
                    },
                    {
                      "p": 26,
                      "c": 0.833,
                      "s": 7949,
                      "e": 8009,
                      "w": "the"
                    },
                    {
                      "p": 27,
                      "c": 0.718,
                      "s": 8020,
                      "e": 8290,
                      "w": "past"
                    },
                    {
                      "p": 28,
                      "c": 0.95,
                      "s": 8300,
                      "e": 8790,
                      "w": "25"
                    },
                    {
                      "p": 29,
                      "c": 0.912,
                      "s": 8800,
                      "e": 9090,
                      "w": "years"
                    },
                    {
                      "p": 30,
                      "c": 0.575,
                      "s": 9100,
                      "e": 9280,
                      "w": "we've"
                    },
                    {
                      "p": 31,
                      "c": 0.909,
                      "s": 9290,
                      "e": 9550,
                      "w": "asked"
                    },
                    {
                      "p": 32,
                      "c": 0.97,
                      "s": 9560,
                      "e": 9769,
                      "w": "over"
                    },
                    {
                      "p": 33,
                      "c": 0.95,
                      "s": 9780,
                      "e": 10390,
                      "w": "201000"
                    },
                    {
                      "p": 34,
                      "c": 0.947,
                      "s": 10399,
                      "e": 10689,
                      "w": "people"
                    },
                    {
                      "p": 35,
                      "c": 0.61,
                      "s": 10700,
                      "e": 10820,
                      "w": "to"
                    },
                    {
                      "p": 36,
                      "c": 0.955,
                      "s": 10830,
                      "e": 11300,
                      "w": "identify"
                    },
                    {
                      "p": 37,
                      "c": 0.95,
                      "s": 11309,
                      "e": 11420,
                      "w": "the"
                    },
                    {
                      "p": 38,
                      "c": 0.968,
                      "s": 11430,
                      "e": 12019,
                      "w": "individuals"
                    },
                    {
                      "p": 39,
                      "c": 0.929,
                      "s": 12030,
                      "e": 12140,
                      "w": "and"
                    },
                    {
                      "p": 40,
                      "c": 0.63,
                      "s": 12149,
                      "e": 12269,
                      "w": "their"
                    },
                    {
                      "p": 41,
                      "c": 0.967,
                      "s": 12280,
                      "e": 13070,
                      "w": "organizations"
                    },
                    {
                      "p": 42,
                      "c": 0.764,
                      "s": 13080,
                      "e": 13229,
                      "w": "who"
                    },
                    {
                      "p": 43,
                      "c": 0.952,
                      "s": 13240,
                      "e": 13399,
                      "w": "could"
                    },
                    {
                      "p": 44,
                      "c": 0.917,
                      "s": 13410,
                      "e": 13649,
                      "w": "really"
                    },
                    {
                      "p": 45,
                      "c": 0.958,
                      "s": 13660,
                      "e": 13870,
                      "w": "get"
                    },
                    {
                      "p": 46,
                      "c": 0.766,
                      "s": 13880,
                      "e": 14130,
                      "w": "things"
                    },
                    {
                      "p": 47,
                      "c": 0.917,
                      "s": 14139,
                      "e": 14410,
                      "w": "done"
                    },
                    {
                      "p": 48,
                      "c": 0.0,
                      "s": 14410,
                      "e": 14410,
                      "m": "punc",
                      "w": "."
                    }
                  ],
                  "alternateFormats": [
                    {
                      "format": "srt",
                      "contentType": "text/srt",
                      "contentEncoding": "Base64",
                      "charset": "utf-8",
                      "data": "MQowMDowMDowMCw2MiAtLT4gMDA6MDA6MDQsNjcKVG8gZmluZCB0aGUgc291cmNlIG9mIHN1Y2Nlc3Mgd2Ugc3RhcnRlZAp0aGF0IHdvcmsgd2UgYXNrZWQgcGVvcGxlIHRvIGlkZW50aWZ5IHdobwoKMgowMDowMDowNCw2OCAtLT4gMDA6MDA6MDksMDkKdGhleSB0aG91Z2h0IHdlcmUgdGhlIG1vc3QgZWZmZWN0aXZlCmNvbGxlYWd1ZXMgaW4gZmFjdCBvdmVyIHRoZSBwYXN0IDI1IHllYXJzCgozCjAwOjAwOjA5LDEwIC0tPiAwMDowMDoxMywwNwp3ZSd2ZSBhc2tlZCBvdmVyIDIwMTAwMCBwZW9wbGUgdG8gaWRlbnRpZnkKdGhlIGluZGl2aWR1YWxzIGFuZCB0aGVpciBvcmdhbml6YXRpb25zCgo0CjAwOjAwOjEzLDA4IC0tPiAwMDowMDoxNCw0MQp3aG8gY291bGQgcmVhbGx5IGdldCB0aGluZ3MgZG9uZS4KCg=="
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Delete this media",
        "summary": "/media/{{mediaId}}",
        "tags": [
          "/media item"
        ],
        "operationId": "/media/{{mediaId}}1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "mediaId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/media/{mediaId}/progress": {
      "get": {
        "description": "You may use this endpoint to poll and monitor progress after submission. Use the Media ID you received in the response from your media POST. VoiceBase also supports callbacks, and may call your server with a range of transcript formats and/or media by using setting up callbacks in your configuration.\n",
        "summary": "/media/{{mediaId}}/progress",
        "tags": [
          "/media item"
        ],
        "operationId": "/media/{{mediaId}}/progress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "mediaId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/~1media~1{{mediaid}}~1progressresponse"
            },
            "examples": {
              "application/json": {
                "mediaId": "6291d2b7-ad67-465c-a23e-e2f201b65a82",
                "jobId": "cc834531-7af0-4251-86c5-aae490343947",
                "progress": {
                  "finish": "318a76fd-ffe8-433b-aa6f-e24b876d9b7f",
                  "start": "b17251a3-7e16-407e-8c71-dc0266614b93",
                  "status": "completed",
                  "tasks": [
                    {
                      "taskId": "b17251a3-7e16-407e-8c71-dc0266614b93",
                      "display": "Ingest",
                      "phase": "ingest",
                      "status": "finished",
                      "dependencies": [],
                      "dependents": [
                        "70ff6791-a318-4d78-ac55-378ee691ffb2",
                        "e19d1c17-7920-4c55-94cf-d4790485a3a6"
                      ]
                    },
                    {
                      "taskId": "737373fa-2620-47cd-bb07-4293071259ac",
                      "display": "Transcripts",
                      "phase": "transcripts",
                      "status": "finished",
                      "dependencies": [
                        "70ff6791-a318-4d78-ac55-378ee691ffb2",
                        "e19d1c17-7920-4c55-94cf-d4790485a3a6"
                      ],
                      "dependents": [
                        "645bb0ce-b856-4020-bc54-995062af6bdd"
                      ]
                    },
                    {
                      "taskId": "645bb0ce-b856-4020-bc54-995062af6bdd",
                      "display": "Transcripts",
                      "phase": "transcripts",
                      "status": "finished",
                      "dependencies": [
                        "737373fa-2620-47cd-bb07-4293071259ac"
                      ],
                      "dependents": [
                        "92c1c0ac-94ea-4cb5-a8d1-689369d375b1"
                      ]
                    },
                    {
                      "taskId": "92c1c0ac-94ea-4cb5-a8d1-689369d375b1",
                      "display": "Transcripts",
                      "phase": "transcripts",
                      "status": "finished",
                      "dependencies": [
                        "645bb0ce-b856-4020-bc54-995062af6bdd"
                      ],
                      "dependents": [
                        "cd35d958-1375-4313-8f88-42b5e350e5d4"
                      ]
                    },
                    {
                      "taskId": "cd35d958-1375-4313-8f88-42b5e350e5d4",
                      "display": "Transcripts",
                      "phase": "transcripts",
                      "status": "finished",
                      "dependencies": [
                        "92c1c0ac-94ea-4cb5-a8d1-689369d375b1"
                      ],
                      "dependents": [
                        "5e1030b2-4eb7-41e2-81f1-fa261df3b4cd"
                      ]
                    },
                    {
                      "taskId": "5e1030b2-4eb7-41e2-81f1-fa261df3b4cd",
                      "display": "Transcripts",
                      "phase": "transcripts",
                      "status": "finished",
                      "dependencies": [
                        "cd35d958-1375-4313-8f88-42b5e350e5d4"
                      ],
                      "dependents": [
                        "ced5a3f0-31e2-49e4-9e34-7829c5e5fa80"
                      ]
                    },
                    {
                      "taskId": "ced5a3f0-31e2-49e4-9e34-7829c5e5fa80",
                      "display": "Publish",
                      "phase": "publish",
                      "status": "finished",
                      "dependencies": [
                        "5e1030b2-4eb7-41e2-81f1-fa261df3b4cd"
                      ],
                      "dependents": [
                        "318a76fd-ffe8-433b-aa6f-e24b876d9b7f"
                      ]
                    },
                    {
                      "taskId": "318a76fd-ffe8-433b-aa6f-e24b876d9b7f",
                      "display": "Publish",
                      "phase": "publish",
                      "status": "finished",
                      "dependencies": [
                        "ced5a3f0-31e2-49e4-9e34-7829c5e5fa80"
                      ],
                      "dependents": []
                    },
                    {
                      "taskId": "70ff6791-a318-4d78-ac55-378ee691ffb2",
                      "display": "Transcripts",
                      "phase": "transcripts",
                      "status": "finished",
                      "dependencies": [
                        "b17251a3-7e16-407e-8c71-dc0266614b93"
                      ],
                      "dependents": [
                        "737373fa-2620-47cd-bb07-4293071259ac"
                      ]
                    },
                    {
                      "taskId": "e19d1c17-7920-4c55-94cf-d4790485a3a6",
                      "display": "Transcripts",
                      "phase": "transcripts",
                      "status": "finished",
                      "dependencies": [
                        "b17251a3-7e16-407e-8c71-dc0266614b93"
                      ],
                      "dependents": [
                        "737373fa-2620-47cd-bb07-4293071259ac"
                      ]
                    }
                  ]
                },
                "_links": {
                  "self": {
                    "href": "https://apis.voicebase.com/v3/media/6291d2b7-ad67-465c-a23e-e2f201b65a82/progress"
                  }
                }
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/media/{mediaId}/transcript": {
      "get": {
        "description": "# Example with Stereo\nIn this example, the agent spoke first, and said \"Hello\" and the caller spoke second and said \"Hi\".\nSpeaker identification is enabled by multi-channel audio, where each channel is associated with a specific speaker. For more information on how to use multi-speaker audio, see the [stereo](stereo.md) section.\n\n# How to read it:\n* \"p\" = Position (word # in the transcript)\n* \"c\" = Confidence (A value between 0-1 that relates to the confidence percent ex: 0.88 = 88%.  When the metadata flag is present confidence contains an arbireary value.)\n* \"s\" = Start time (milliseconds)\n* \"e\" = End time (milliseconds)\n* \"w\" = The word itself (When the metadata flag is present \"w\" refers to the speaker)\n* \"m\" = metadata (In this case when \"m\": \"turn\" it is detecting a change in speaker)",
        "summary": "/media/{{mediaId}}/transcript",
        "tags": [
          "/media item"
        ],
        "operationId": "/media/{{mediaId}}/transcript",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "mediaId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/~1media~1{{mediaid}}~1transcriptresponse"
            },
            "examples": {
              "application/json": {
                "mediaId": "bc14632d-e81b-4673-992d-5c5fb6573fb8",
                "status": "finished",
                "dateCreated": "2017-06-22T19:18:49Z",
                "mediaContentType": "audio/x-wav",
                "length": 10031,
                "transcript": {
                  "words": [
                    {
                      "p": 1,
                      "c": 0.1,
                      "s": 2200,
                      "e": 2350,
                      "w": "agent: ",
                      "m": "turn"
                    },
                    {
                      "p": 2,
                      "c": 0.537,
                      "s": 2200,
                      "e": 2300,
                      "w": "Hello"
                    },
                    {
                      "p": 52,
                      "c": 0.1,
                      "s": 2400,
                      "e": 2550,
                      "w": "caller: ",
                      "m": "turn"
                    },
                    {
                      "p": 53,
                      "c": 0.975,
                      "s": 2400,
                      "e": 2500,
                      "w": "Hi"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/media/{mediaId}/transcript/text": {
      "get": {
        "description": "Retrieve the transcript from a given media in plain text format",
        "summary": "/media/{{mediaId}}/transcript/text",
        "tags": [
          "/media item"
        ],
        "operationId": "/media/{{mediaId}}/transcript/text",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "mediaId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "examples": {}
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/media/{mediaId}/transcript/webvtt": {
      "get": {
        "description": "Retrieve the transcript from a given media in WEBVTT format",
        "summary": "/media/{{mediaId}}/transcript/webvtt",
        "tags": [
          "/media item"
        ],
        "operationId": "/media/{{mediaId}}/transcript/webvtt",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "mediaId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "examples": {}
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/media/{mediaId}/transcript/srt": {
      "get": {
        "description": "VoiceBase can generate subtitles or closed captions for your video project, by allowing you to retrieve the transcript of your audio or video file using the WebVTT or SubRip Text (SRT) format.\n\nRetrieve the transcript from a given media in SRT (subtitles) format by using this resource.",
        "summary": "/media/{{mediaId}}/transcript/srt",
        "tags": [
          "/media item"
        ],
        "operationId": "/media/{{mediaId}}/transcript/srt",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "mediaId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "examples": {}
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/media/{mediaId}/transcript/dfxp": {
      "get": {
        "description": "Retrieve the transcript from a given media in DFXP format",
        "summary": "/media/{{mediaId}}/transcript/dfxp",
        "tags": [
          "/media item"
        ],
        "operationId": "/media/{{mediaId}}/transcript/dfxp",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "mediaId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "examples": {}
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/media/{mediaId}/streams": {
      "get": {
        "description": "Get list of available media URLs",
        "summary": "/media/{{mediaId}}/streams",
        "tags": [
          "/media item"
        ],
        "operationId": "/media/{{mediaId}}/streams",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "mediaId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/~1media~1{{mediaid}}~1streamsresponse"
            },
            "examples": {
              "application/json": {
                "streams": [
                  {
                    "streamName": "redacted",
                    "streamLocation": "https://media.voicebase.com/20ccef07-a807-5ec4-7e72-9b0e96cd04be/6291d2b7-ad67-465c-a23e-e2f201b65a82.mp3"
                  }
                ],
                "_links": {
                  "self": {
                    "href": "https://apis.voicebase.com/v3/media/6291d2b7-ad67-465c-a23e-e2f201b65a82/streams"
                  }
                }
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/media/{mediaId}/streams/original": {
      "get": {
        "description": "Redirects to the original version of the file",
        "summary": "/media/{{mediaId}}/streams/original",
        "tags": [
          "/media item"
        ],
        "operationId": "/media/{{mediaId}}/streams/original",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "mediaId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/media/{mediaId}/metadata": {
      "get": {
        "description": "Retrieve the media metadata",
        "summary": "/media/{{mediaId}}/metadata",
        "tags": [
          "/media item"
        ],
        "operationId": "/media/{{mediaId}}/metadata1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "mediaId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "Set or update the media metadata",
        "summary": "/media/{{mediaId}}/metadata",
        "tags": [
          "/media item"
        ],
        "operationId": "/media/{{mediaId}}/metadata",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "mediaId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/definition/vocabularies": {
      "get": {
        "description": "List all defined custom vocabularies. Custom vocabularies are used to improve accurary of transcription",
        "summary": "/definiton/vocabularies - List keyword spotting groups",
        "tags": [
          "/definition/vocabularies"
        ],
        "operationId": "/definiton/vocabularies - List keyword spotting groups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/definition/vocabularies",
              "headers": {
                "Accept": "application/json",
                "Authorization": "Bearer {{bearer-token}}"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "/definiton/vocabularies - List keyword spotting groups",
            "x-testDescription": "List all defined custom vocabularies. Custom vocabularies are used to improve accurary of transcription"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/definition/vocabularies/{vocabularyId}": {
      "get": {
        "description": "Retrieve a custom vocabulary",
        "summary": "/definiton/vocabularies/{{vocabularyId}} - Retreive a custom vocabulary",
        "tags": [
          "/definition/vocabularies"
        ],
        "operationId": "/definiton/vocabularies/{{vocabularyId}} - Retreive a custom vocabulary",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "vocabularyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "Create or update a custom vocabulary. Custom vocabularies are used to improve accurary of transcription",
        "summary": "/definiton/vocabularies/{{vocabularyId}} - Define a custom vocabulary",
        "tags": [
          "/definition/vocabularies"
        ],
        "operationId": "/definiton/vocabularies/{{vocabularyId}} - Define a custom vocabulary",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "vocabularyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Delete a custom vocabulary",
        "summary": "/definiton/vocabularies/{{vocabularyId}} - Delete a custom vocabulary",
        "tags": [
          "/definition/vocabularies"
        ],
        "operationId": "/definiton/vocabularies/{{vocabularyId}} - Delete a custom vocabulary",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "vocabularyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/definition/spotting/groups": {
      "get": {
        "description": "Get all defined keyword spotting groups",
        "summary": "/definition/spotting/groups - List Phrase Spotting Groups",
        "tags": [
          "/definition/spotting"
        ],
        "operationId": "/definition/spotting/groups - List Phrase Spotting Groups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/definition/spotting/groups",
              "headers": {
                "Accept": "application/json",
                "Authorization": "Bearer {{bearer-token}}"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "/definition/spotting/groups - List Phrase Spotting Groups",
            "x-testDescription": "Get all defined keyword spotting groups"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/definition/spotting/groups/{groupId}": {
      "get": {
        "description": "Retrieve a keyword spotting group with its keywords",
        "summary": "/definiton/spotting/groups/{{groupId}} - Retreive a Phrase Spotting Group",
        "tags": [
          "/definition/spotting"
        ],
        "operationId": "/definiton/spotting/groups/{{groupId}} - Retreive a Phrase Spotting Group",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "Create or update a keyword spotting group with a set of keywords",
        "summary": "/definition/spotting/groups/{{groupId}} - Create or Update",
        "tags": [
          "/definition/spotting"
        ],
        "operationId": "/definition/spotting/groups/{{groupId}} - Create or Update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/~1definition~1spotting~1groups~1{{groupid}}  create or updaterequest"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/~1definition~1spotting~1groups~1{{groupid}}  create or updateresponse"
            },
            "examples": {
              "application/json": {
                "groupName": "testGroup",
                "keywords": [
                  "array",
                  "of",
                  "keywords"
                ],
                "_links": {
                  "self": {
                    "href": "https://apis.voicebase.com/v3/definition/spotting/groups/testGroup"
                  }
                }
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/definition/spotting/groups/{testGroupId}": {
      "delete": {
        "description": "Delete the keyword spotting group",
        "summary": "/definiton/spotting/groups/{{testGroupId}} - Delete a Phrase Spotting Group",
        "tags": [
          "/definition/spotting"
        ],
        "operationId": "/definiton/spotting/groups/{{testGroupId}} - Delete a Phrase Spotting Group",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testGroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/definition/media/search": {
      "get": {
        "description": "Get searchable fields",
        "summary": "/definition/media/search - Retreive the list of extended metadata seatchable fields",
        "tags": [
          "/definition/media/search"
        ],
        "operationId": "/definition/media/search - Retreive the list of extended metadata seatchable fields",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/definition/media/search",
              "headers": {
                "Accept": "application/json",
                "Authorization": "Bearer {{bearer-token}}"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "/definition/media/search - Retreive the list of extended metadata seatchable fields",
            "x-testDescription": "Get searchable fields"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "Create or update custom parameters of metadata for search",
        "summary": "/definiton/media/search - Define extended metadata searchable fields",
        "tags": [
          "/definition/media/search"
        ],
        "operationId": "/definiton/media/search - Define extended metadata searchable fields",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "PUT",
              "uri": "/definition/media/search",
              "headers": {
                "Accept": "application/json",
                "Authorization": "Bearer {{bearer-token}}"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "/definiton/media/search - Define extended metadata searchable fields",
            "x-testDescription": "Create or update custom parameters of metadata for search"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/profile/keys": {
      "get": {
        "description": "Returns all current API keys for current user",
        "summary": "/profile/keys - List API keys",
        "tags": [
          "/profile"
        ],
        "operationId": "/profile/keys - List API keys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/profile/keys",
              "headers": {
                "Accept": "application/json",
                "Authorization": "Bearer {{bearer-token}}"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "/profile/keys - List API keys",
            "x-testDescription": "Returns all current API keys for current user"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Create a new API key for the current user",
        "summary": "/profile/keys - Create a API key",
        "tags": [
          "/profile"
        ],
        "operationId": "/profile/keys - Create a API key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/profile/keys",
              "headers": {
                "Accept": "application/json",
                "Authorization": "Bearer {{bearer-token}}"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "/profile/keys - Create a API key",
            "x-testDescription": "Create a new API key for the current user"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/profile/keys/{keyId}": {
      "get": {
        "description": "Get information about this API key",
        "summary": "/profile/keys/{{keyId}} - Retreive details about an API key",
        "tags": [
          "/profile"
        ],
        "operationId": "/profile/keys/{{keyId}} - Retreive details about an API key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "keyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Delete and revoke this API key",
        "summary": "/profile/keys/{{keyId}} - Delete a API key",
        "tags": [
          "/profile"
        ],
        "operationId": "/profile/keys/{{keyId}} - Delete a API key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "keyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "definitions": {
    "/media  upload a media file for transcriptionresponse": {
      "title": "/media - Upload a media file for transcriptionResponse",
      "example": {
        "_links": {
          "self": {
            "href": "/v3/media/cfdeb667-2e7c-4d69-b5d5-dccd84d0f499"
          },
          "progress": {
            "href": "/v3/media/cfdeb667-2e7c-4d69-b5d5-dccd84d0f499/progress"
          },
          "metadata": {
            "href": "/v3/media/cfdeb667-2e7c-4d69-b5d5-dccd84d0f499/metadata"
          }
        },
        "formatVersion": "3.0.1",
        "mediaId": "cfdeb667-2e7c-4d69-b5d5-dccd84d0f499",
        "status": "accepted",
        "dateCreated": "2017-10-13T22:35:48.346Z",
        "metadata": {},
        "mediaContentType": "audio/x-wav",
        "length": 10460
      },
      "type": "object",
      "properties": {
        "_links": {
          "description": "",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "formatVersion": {
          "description": "",
          "type": "string"
        },
        "mediaId": {
          "description": "",
          "type": "string"
        },
        "status": {
          "description": "",
          "type": "string"
        },
        "dateCreated": {
          "description": "",
          "type": "string"
        },
        "metadata": {
          "description": "",
          "type": "object"
        },
        "mediaContentType": {
          "description": "",
          "type": "string"
        },
        "length": {
          "description": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "_links",
        "formatVersion",
        "mediaId",
        "status",
        "dateCreated",
        "metadata",
        "mediaContentType",
        "length"
      ]
    },
    "/media/{{mediaid}}response": {
      "title": "/media/{{mediaId}}Response",
      "example": {
        "_links": {
          "self": {
            "href": "/v3/media/00251dbe-c769-4a9f-bb87-b3aeb0745179"
          },
          "progress": {
            "href": "/v3/media/00251dbe-c769-4a9f-bb87-b3aeb0745179/progress"
          },
          "metadata": {
            "href": "/v3/media/00251dbe-c769-4a9f-bb87-b3aeb0745179/metadata"
          },
          "transcript": {
            "href": "/v3/media/00251dbe-c769-4a9f-bb87-b3aeb0745179/transcript"
          },
          "text": {
            "href": "/v3/media/00251dbe-c769-4a9f-bb87-b3aeb0745179/transcript/text"
          },
          "srt": {
            "href": "/v3/media/00251dbe-c769-4a9f-bb87-b3aeb0745179/transcript/srt"
          },
          "dfxp": {
            "href": "/v3/media/00251dbe-c769-4a9f-bb87-b3aeb0745179/transcript/dfxp"
          },
          "webvtt": {
            "href": "/v3/media/00251dbe-c769-4a9f-bb87-b3aeb0745179/transcript/webvtt"
          },
          "streams": {
            "href": "/v3/media/00251dbe-c769-4a9f-bb87-b3aeb0745179/streams"
          }
        },
        "formatVersion": "3.0.1",
        "mediaId": "00251dbe-c769-4a9f-bb87-b3aeb0745179",
        "status": "finished",
        "dateCreated": "2017-10-12T22:16:13.98Z",
        "metadata": {},
        "mediaContentType": "audio/x-aiff",
        "length": 14965,
        "transcript": {
          "confidence": 0.13038286891052212,
          "words": [
            {
              "p": 0,
              "c": 0.972,
              "s": 620,
              "e": 750,
              "w": "To"
            },
            {
              "p": 1,
              "c": 0.964,
              "s": 760,
              "e": 1020,
              "w": "find"
            },
            {
              "p": 2,
              "c": 0.901,
              "s": 1030,
              "e": 1080,
              "w": "the"
            },
            {
              "p": 3,
              "c": 0.692,
              "s": 1090,
              "e": 1390,
              "w": "source"
            },
            {
              "p": 4,
              "c": 0.962,
              "s": 1400,
              "e": 1470,
              "w": "of"
            },
            {
              "p": 5,
              "c": 0.882,
              "s": 1480,
              "e": 2000,
              "w": "success"
            },
            {
              "p": 6,
              "c": 0.974,
              "s": 2010,
              "e": 2150,
              "w": "we"
            },
            {
              "p": 7,
              "c": 0.972,
              "s": 2159,
              "e": 2469,
              "w": "started"
            },
            {
              "p": 8,
              "c": 0.303,
              "s": 2479,
              "e": 2600,
              "w": "that"
            },
            {
              "p": 9,
              "c": 0.885,
              "s": 2610,
              "e": 2969,
              "w": "work"
            },
            {
              "p": 10,
              "c": 0.27,
              "s": 3180,
              "e": 3310,
              "w": "we"
            },
            {
              "p": 11,
              "c": 0.896,
              "s": 3320,
              "e": 3539,
              "w": "asked"
            },
            {
              "p": 12,
              "c": 0.9,
              "s": 3550,
              "e": 3820,
              "w": "people"
            },
            {
              "p": 13,
              "c": 0.951,
              "s": 3830,
              "e": 3969,
              "w": "to"
            },
            {
              "p": 14,
              "c": 0.773,
              "s": 3979,
              "e": 4520,
              "w": "identify"
            },
            {
              "p": 15,
              "c": 0.955,
              "s": 4530,
              "e": 4670,
              "w": "who"
            },
            {
              "p": 16,
              "c": 0.929,
              "s": 4679,
              "e": 4790,
              "w": "they"
            },
            {
              "p": 17,
              "c": 0.863,
              "s": 4800,
              "e": 5110,
              "w": "thought"
            },
            {
              "p": 18,
              "c": 0.954,
              "s": 5119,
              "e": 5220,
              "w": "were"
            },
            {
              "p": 19,
              "c": 0.737,
              "s": 5230,
              "e": 5300,
              "w": "the"
            },
            {
              "p": 20,
              "c": 0.869,
              "s": 5310,
              "e": 5570,
              "w": "most"
            },
            {
              "p": 21,
              "c": 0.701,
              "s": 5580,
              "e": 6020,
              "w": "effective"
            },
            {
              "p": 22,
              "c": 0.976,
              "s": 6030,
              "e": 6560,
              "w": "colleagues"
            },
            {
              "p": 23,
              "c": 0.941,
              "s": 6570,
              "e": 6679,
              "w": "in"
            },
            {
              "p": 24,
              "c": 0.937,
              "s": 6690,
              "e": 7159,
              "w": "fact"
            },
            {
              "p": 25,
              "c": 0.313,
              "s": 7750,
              "e": 7940,
              "w": "over"
            },
            {
              "p": 26,
              "c": 0.833,
              "s": 7949,
              "e": 8009,
              "w": "the"
            },
            {
              "p": 27,
              "c": 0.718,
              "s": 8020,
              "e": 8290,
              "w": "past"
            },
            {
              "p": 28,
              "c": 0.95,
              "s": 8300,
              "e": 8790,
              "w": "25"
            },
            {
              "p": 29,
              "c": 0.912,
              "s": 8800,
              "e": 9090,
              "w": "years"
            },
            {
              "p": 30,
              "c": 0.575,
              "s": 9100,
              "e": 9280,
              "w": "we've"
            },
            {
              "p": 31,
              "c": 0.909,
              "s": 9290,
              "e": 9550,
              "w": "asked"
            },
            {
              "p": 32,
              "c": 0.97,
              "s": 9560,
              "e": 9769,
              "w": "over"
            },
            {
              "p": 33,
              "c": 0.95,
              "s": 9780,
              "e": 10390,
              "w": "201000"
            },
            {
              "p": 34,
              "c": 0.947,
              "s": 10399,
              "e": 10689,
              "w": "people"
            },
            {
              "p": 35,
              "c": 0.61,
              "s": 10700,
              "e": 10820,
              "w": "to"
            },
            {
              "p": 36,
              "c": 0.955,
              "s": 10830,
              "e": 11300,
              "w": "identify"
            },
            {
              "p": 37,
              "c": 0.95,
              "s": 11309,
              "e": 11420,
              "w": "the"
            },
            {
              "p": 38,
              "c": 0.968,
              "s": 11430,
              "e": 12019,
              "w": "individuals"
            },
            {
              "p": 39,
              "c": 0.929,
              "s": 12030,
              "e": 12140,
              "w": "and"
            },
            {
              "p": 40,
              "c": 0.63,
              "s": 12149,
              "e": 12269,
              "w": "their"
            },
            {
              "p": 41,
              "c": 0.967,
              "s": 12280,
              "e": 13070,
              "w": "organizations"
            },
            {
              "p": 42,
              "c": 0.764,
              "s": 13080,
              "e": 13229,
              "w": "who"
            },
            {
              "p": 43,
              "c": 0.952,
              "s": 13240,
              "e": 13399,
              "w": "could"
            },
            {
              "p": 44,
              "c": 0.917,
              "s": 13410,
              "e": 13649,
              "w": "really"
            },
            {
              "p": 45,
              "c": 0.958,
              "s": 13660,
              "e": 13870,
              "w": "get"
            },
            {
              "p": 46,
              "c": 0.766,
              "s": 13880,
              "e": 14130,
              "w": "things"
            },
            {
              "p": 47,
              "c": 0.917,
              "s": 14139,
              "e": 14410,
              "w": "done"
            },
            {
              "p": 48,
              "c": 0.0,
              "s": 14410,
              "e": 14410,
              "m": "punc",
              "w": "."
            }
          ],
          "alternateFormats": [
            {
              "format": "srt",
              "contentType": "text/srt",
              "contentEncoding": "Base64",
              "charset": "utf-8",
              "data": "MQowMDowMDowMCw2MiAtLT4gMDA6MDA6MDQsNjcKVG8gZmluZCB0aGUgc291cmNlIG9mIHN1Y2Nlc3Mgd2Ugc3RhcnRlZAp0aGF0IHdvcmsgd2UgYXNrZWQgcGVvcGxlIHRvIGlkZW50aWZ5IHdobwoKMgowMDowMDowNCw2OCAtLT4gMDA6MDA6MDksMDkKdGhleSB0aG91Z2h0IHdlcmUgdGhlIG1vc3QgZWZmZWN0aXZlCmNvbGxlYWd1ZXMgaW4gZmFjdCBvdmVyIHRoZSBwYXN0IDI1IHllYXJzCgozCjAwOjAwOjA5LDEwIC0tPiAwMDowMDoxMywwNwp3ZSd2ZSBhc2tlZCBvdmVyIDIwMTAwMCBwZW9wbGUgdG8gaWRlbnRpZnkKdGhlIGluZGl2aWR1YWxzIGFuZCB0aGVpciBvcmdhbml6YXRpb25zCgo0CjAwOjAwOjEzLDA4IC0tPiAwMDowMDoxNCw0MQp3aG8gY291bGQgcmVhbGx5IGdldCB0aGluZ3MgZG9uZS4KCg=="
            }
          ]
        }
      },
      "type": "object",
      "properties": {
        "_links": {
          "description": "",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "formatVersion": {
          "description": "",
          "type": "string"
        },
        "mediaId": {
          "description": "",
          "type": "string"
        },
        "status": {
          "description": "",
          "type": "string"
        },
        "dateCreated": {
          "description": "",
          "type": "string"
        },
        "metadata": {
          "description": "",
          "type": "object"
        },
        "mediaContentType": {
          "description": "",
          "type": "string"
        },
        "length": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "transcript": {
          "$ref": "#/definitions/Transcript"
        }
      },
      "required": [
        "_links",
        "formatVersion",
        "mediaId",
        "status",
        "dateCreated",
        "metadata",
        "mediaContentType",
        "length",
        "transcript"
      ]
    },
    "Transcript": {
      "title": "Transcript",
      "type": "object",
      "properties": {
        "confidence": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "words": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Word"
          }
        },
        "alternateFormats": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlternateFormat"
          }
        }
      },
      "required": [
        "confidence",
        "words",
        "alternateFormats"
      ]
    },
    "Word": {
      "title": "Word",
      "type": "object",
      "properties": {
        "p": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "c": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "s": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "e": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "w": {
          "description": "",
          "type": "string"
        },
        "m": {
          "description": "",
          "type": "string"
        }
      },
      "required": [
        "p",
        "c",
        "s",
        "e",
        "w"
      ]
    },
    "AlternateFormat": {
      "title": "AlternateFormat",
      "type": "object",
      "properties": {
        "format": {
          "description": "",
          "type": "string"
        },
        "contentType": {
          "description": "",
          "type": "string"
        },
        "contentEncoding": {
          "description": "",
          "type": "string"
        },
        "charset": {
          "description": "",
          "type": "string"
        },
        "data": {
          "description": "",
          "type": "string"
        }
      },
      "required": [
        "format",
        "contentType",
        "contentEncoding",
        "charset",
        "data"
      ]
    },
    "/media/{{mediaid}}/progressresponse": {
      "title": "/media/{{mediaId}}/progressResponse",
      "example": {
        "mediaId": "6291d2b7-ad67-465c-a23e-e2f201b65a82",
        "jobId": "cc834531-7af0-4251-86c5-aae490343947",
        "progress": {
          "finish": "318a76fd-ffe8-433b-aa6f-e24b876d9b7f",
          "start": "b17251a3-7e16-407e-8c71-dc0266614b93",
          "status": "completed",
          "tasks": [
            {
              "taskId": "b17251a3-7e16-407e-8c71-dc0266614b93",
              "display": "Ingest",
              "phase": "ingest",
              "status": "finished",
              "dependencies": [],
              "dependents": [
                "70ff6791-a318-4d78-ac55-378ee691ffb2",
                "e19d1c17-7920-4c55-94cf-d4790485a3a6"
              ]
            },
            {
              "taskId": "737373fa-2620-47cd-bb07-4293071259ac",
              "display": "Transcripts",
              "phase": "transcripts",
              "status": "finished",
              "dependencies": [
                "70ff6791-a318-4d78-ac55-378ee691ffb2",
                "e19d1c17-7920-4c55-94cf-d4790485a3a6"
              ],
              "dependents": [
                "645bb0ce-b856-4020-bc54-995062af6bdd"
              ]
            },
            {
              "taskId": "645bb0ce-b856-4020-bc54-995062af6bdd",
              "display": "Transcripts",
              "phase": "transcripts",
              "status": "finished",
              "dependencies": [
                "737373fa-2620-47cd-bb07-4293071259ac"
              ],
              "dependents": [
                "92c1c0ac-94ea-4cb5-a8d1-689369d375b1"
              ]
            },
            {
              "taskId": "92c1c0ac-94ea-4cb5-a8d1-689369d375b1",
              "display": "Transcripts",
              "phase": "transcripts",
              "status": "finished",
              "dependencies": [
                "645bb0ce-b856-4020-bc54-995062af6bdd"
              ],
              "dependents": [
                "cd35d958-1375-4313-8f88-42b5e350e5d4"
              ]
            },
            {
              "taskId": "cd35d958-1375-4313-8f88-42b5e350e5d4",
              "display": "Transcripts",
              "phase": "transcripts",
              "status": "finished",
              "dependencies": [
                "92c1c0ac-94ea-4cb5-a8d1-689369d375b1"
              ],
              "dependents": [
                "5e1030b2-4eb7-41e2-81f1-fa261df3b4cd"
              ]
            },
            {
              "taskId": "5e1030b2-4eb7-41e2-81f1-fa261df3b4cd",
              "display": "Transcripts",
              "phase": "transcripts",
              "status": "finished",
              "dependencies": [
                "cd35d958-1375-4313-8f88-42b5e350e5d4"
              ],
              "dependents": [
                "ced5a3f0-31e2-49e4-9e34-7829c5e5fa80"
              ]
            },
            {
              "taskId": "ced5a3f0-31e2-49e4-9e34-7829c5e5fa80",
              "display": "Publish",
              "phase": "publish",
              "status": "finished",
              "dependencies": [
                "5e1030b2-4eb7-41e2-81f1-fa261df3b4cd"
              ],
              "dependents": [
                "318a76fd-ffe8-433b-aa6f-e24b876d9b7f"
              ]
            },
            {
              "taskId": "318a76fd-ffe8-433b-aa6f-e24b876d9b7f",
              "display": "Publish",
              "phase": "publish",
              "status": "finished",
              "dependencies": [
                "ced5a3f0-31e2-49e4-9e34-7829c5e5fa80"
              ],
              "dependents": []
            },
            {
              "taskId": "70ff6791-a318-4d78-ac55-378ee691ffb2",
              "display": "Transcripts",
              "phase": "transcripts",
              "status": "finished",
              "dependencies": [
                "b17251a3-7e16-407e-8c71-dc0266614b93"
              ],
              "dependents": [
                "737373fa-2620-47cd-bb07-4293071259ac"
              ]
            },
            {
              "taskId": "e19d1c17-7920-4c55-94cf-d4790485a3a6",
              "display": "Transcripts",
              "phase": "transcripts",
              "status": "finished",
              "dependencies": [
                "b17251a3-7e16-407e-8c71-dc0266614b93"
              ],
              "dependents": [
                "737373fa-2620-47cd-bb07-4293071259ac"
              ]
            }
          ]
        },
        "_links": {
          "self": {
            "href": "https://apis.voicebase.com/v3/media/6291d2b7-ad67-465c-a23e-e2f201b65a82/progress"
          }
        }
      },
      "type": "object",
      "properties": {
        "mediaId": {
          "description": "",
          "type": "string"
        },
        "jobId": {
          "description": "",
          "type": "string"
        },
        "progress": {
          "$ref": "#/definitions/Progress"
        },
        "_links": {
          "description": "",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      },
      "required": [
        "mediaId",
        "jobId",
        "progress",
        "_links"
      ]
    },
    "Progress": {
      "title": "Progress",
      "type": "object",
      "properties": {
        "finish": {
          "description": "",
          "type": "string"
        },
        "start": {
          "description": "",
          "type": "string"
        },
        "status": {
          "description": "",
          "type": "string"
        },
        "tasks": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          }
        }
      },
      "required": [
        "finish",
        "start",
        "status",
        "tasks"
      ]
    },
    "Task": {
      "title": "Task",
      "type": "object",
      "properties": {
        "taskId": {
          "description": "",
          "type": "string"
        },
        "display": {
          "description": "",
          "type": "string"
        },
        "phase": {
          "description": "",
          "type": "string"
        },
        "status": {
          "description": "",
          "type": "string"
        },
        "dependencies": {
          "description": "",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dependents": {
          "description": "",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "taskId",
        "display",
        "phase",
        "status",
        "dependencies",
        "dependents"
      ]
    },
    "/media/{{mediaid}}/transcriptresponse": {
      "title": "/media/{{mediaId}}/transcriptResponse",
      "example": {
        "mediaId": "bc14632d-e81b-4673-992d-5c5fb6573fb8",
        "status": "finished",
        "dateCreated": "2017-06-22T19:18:49Z",
        "mediaContentType": "audio/x-wav",
        "length": 10031,
        "transcript": {
          "words": [
            {
              "p": 1,
              "c": 0.1,
              "s": 2200,
              "e": 2350,
              "w": "agent: ",
              "m": "turn"
            },
            {
              "p": 2,
              "c": 0.537,
              "s": 2200,
              "e": 2300,
              "w": "Hello"
            },
            {
              "p": 52,
              "c": 0.1,
              "s": 2400,
              "e": 2550,
              "w": "caller: ",
              "m": "turn"
            },
            {
              "p": 53,
              "c": 0.975,
              "s": 2400,
              "e": 2500,
              "w": "Hi"
            }
          ]
        }
      },
      "type": "object",
      "properties": {
        "mediaId": {
          "description": "",
          "type": "string"
        },
        "status": {
          "description": "",
          "type": "string"
        },
        "dateCreated": {
          "description": "",
          "type": "string"
        },
        "mediaContentType": {
          "description": "",
          "type": "string"
        },
        "length": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "transcript": {
          "$ref": "#/definitions/Transcript9"
        }
      },
      "required": [
        "mediaId",
        "status",
        "dateCreated",
        "mediaContentType",
        "length",
        "transcript"
      ]
    },
    "Transcript9": {
      "title": "Transcript9",
      "type": "object",
      "properties": {
        "words": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Word"
          }
        }
      },
      "required": [
        "words"
      ]
    },
    "/media/{{mediaid}}/streamsresponse": {
      "title": "/media/{{mediaId}}/streamsResponse",
      "example": {
        "streams": [
          {
            "streamName": "redacted",
            "streamLocation": "https://media.voicebase.com/20ccef07-a807-5ec4-7e72-9b0e96cd04be/6291d2b7-ad67-465c-a23e-e2f201b65a82.mp3"
          }
        ],
        "_links": {
          "self": {
            "href": "https://apis.voicebase.com/v3/media/6291d2b7-ad67-465c-a23e-e2f201b65a82/streams"
          }
        }
      },
      "type": "object",
      "properties": {
        "streams": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Stream"
          }
        },
        "_links": {
          "description": "",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      },
      "required": [
        "streams",
        "_links"
      ]
    },
    "Stream": {
      "title": "Stream",
      "type": "object",
      "properties": {
        "streamName": {
          "description": "",
          "type": "string"
        },
        "streamLocation": {
          "description": "",
          "type": "string"
        }
      },
      "required": [
        "streamName",
        "streamLocation"
      ]
    },
    "/definition/spotting/groups/{{groupid}}  create or updaterequest": {
      "title": "/definition/spotting/groups/{{groupId}} - Create or UpdateRequest",
      "example": {
        "groupName": "testGroup",
        "keywords": [
          "array",
          "of",
          "keywords"
        ]
      },
      "type": "object",
      "properties": {
        "groupName": {
          "description": "",
          "type": "string"
        },
        "keywords": {
          "description": "",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "groupName",
        "keywords"
      ]
    },
    "/definition/spotting/groups/{{groupid}}  create or updateresponse": {
      "title": "/definition/spotting/groups/{{groupId}} - Create or UpdateResponse",
      "example": {
        "groupName": "testGroup",
        "keywords": [
          "array",
          "of",
          "keywords"
        ],
        "_links": {
          "self": {
            "href": "https://apis.voicebase.com/v3/definition/spotting/groups/testGroup"
          }
        }
      },
      "type": "object",
      "properties": {
        "groupName": {
          "description": "",
          "type": "string"
        },
        "keywords": {
          "description": "",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "_links": {
          "description": "",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      },
      "required": [
        "groupName",
        "keywords",
        "_links"
      ]
    }
  }
}